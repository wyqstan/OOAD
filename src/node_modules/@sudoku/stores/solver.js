import { BOX_SIZE, GRID_LENGTH, SUDOKU_SIZE, GRID_COORDS } from '@sudoku/constants';
import { writable } from 'svelte/store'

//import the strategies.
import { currentBoard, currentAnswerCandidates } from '@sudoku/stores/boardForSolve'
import { testStrategy } from '@sudoku/stores/strategies/testStrategy'

const strategies = [ testStrategy ];

//传入抽象数据用于计算，与其他模块分离
export function solver(sudoku){
    let board = sudoku.flat();

    //currentBoard赋值
    currentBoard.update((currentBoardValue) =>{
        for(let row = 0; row < SUDOKU_SIZE; row++){
            for(let col = 0; col < SUDOKU_SIZE; col++){
                    currentBoardValue[row][col] = board[row * SUDOKU_SIZE + col];
            }
        }
        return currentBoardValue;
    });

    //currentAnswerCandidates赋值
    //

    strategies.forEach((strategy) => {
        strategy();
    });
}

//更新虚拟棋盘，方便计算
//function updateBoard(board, answerCandidates){
//    let currentBoard = board;
//
//    for(let row = 0; row < SUDOKU_SIZE; row++){
//        for(let col = 0; col < SUDOKU_SIZE; col++){
//            if(currentBoard[row][col] === 0 && answerCandidates[`${row},${col}`].length == 1){
//                currentBoard[row][col] = answerCandidates[`${row},${col}`][0];
//            }
//        }
//    }
//
//    return currentBoard;
//}