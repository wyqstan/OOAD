import { BOX_SIZE, GRID_LENGTH, SUDOKU_SIZE, GRID_COORDS } from '@sudoku/constants';
import { writable } from 'svelte/store';

//import the strategies.
import { nextBoard } from '@sudoku/stores/boardForSolve';
import { initCandidates, hidingSingles } from '@sudoku/stores/strategies/basicStrategy'

const strategies = [ hidingSingles ];

export function solver(sudoku){
    let board = sudoku.flat();

//    board = [0,0,0,0,0,0,0,0,2,1,3,9,0,0,0,7,0,0,8,0,0,0,0,6,0,0,
//        5,4,0,0,0,0,3,0,0,0,0,0,0,0,0,0,2,0,0,0,2,1,0,0,0,0,7,0,9,
//        0,0,8,2,0,1,0,0,0,0,5,1,0,0,0,0,0,6,0,0,3,0,0,4,0,0]

    for(let row = 0; row < SUDOKU_SIZE; row++){
        for(let col = 0; col < SUDOKU_SIZE; col++){
            nextBoard[row][col][0] = board[row * SUDOKU_SIZE + col];
        }
    }

    initCandidates();

    strategies.forEach((strategy) => {
        strategy();
    });

    showBoard(nextBoard);
    console.log(nextBoard);
}

function showBoard(board){
    for(let row = 0; row < SUDOKU_SIZE; row++){
        let x = [];
        for(let col = 0; col < SUDOKU_SIZE; col++){
            x.push(board[row][col][0]);
        }
        console.log(x);
    }
}